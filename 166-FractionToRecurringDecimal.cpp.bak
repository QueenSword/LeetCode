/*=============================================================================
#     FileName: 166-FractionToRecurringDecimal.cpp
#         Desc: 
#       Author: qsword
#        Email: huangjian1993@gmail.com
#     HomePage: 
#      Created: 2015-05-12 13:16:47
#      Version: 0.0.1
#   LastChange: 2015-05-12 13:16:47
#      History:
#               0.0.1 | qsword | init
=============================================================================*/

#include <leetcode.h>
#include <sstream>
#include <unordered_set>

class Solution {
public:
    string fractionToDecimal(int numerator, int denominator) {
        float f = (float)(numerator) / denominator;
        if (f * denominator == (float)numerator) {
            ostringstream oss;
            oss << f;
            return oss.str();
        }
        int tmp = numerator % denominator, start;
        unordered_set<int> set;
        while (tmp != 0) {
            tmp *= 10;
            int num = tmp / denominator;
            if (set.find(num) != )
        }

    }

};
